extends: [cmake_package]
dependencies:
  build: [boost, png, qt, zlib, hdf5, mpi, netcdf4, netcdf4cpp]
  #extra build deps to enable as we go: gdal, numpy, python, ffmpeg, hdf5, libxml3, matplotlib
sources:
- url: http://www.paraview.org/files/v4.1/ParaView-v4.1.0-source.tar.gz
  key: tar.gz:qdxytdavrv75ttvqxtmdxypwphxpa3he

build_stages:
- name: configure
  mode: override
  extra: ['-DBUILD_SHARED_LIBS:BOOL=ON',
          '-DBUILD_TESTING:BOOL=OFF',
          '-DPARAVIEW_BUILD_WEB_DOCUMENTATION:BOOL=OFF',
          '-DPARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=OFF',
          '-DPARAVIEW_ENABLE_CATALYST:BOOL=OFF',
          '-DPARAVIEW_BUILD_PLUGIN_CoProcessingScriptGenerator:BOOL=ON',
          '-DPARAVIEW_BUILD_PLUGIN_EyeDomeLighting:BOOL=ON',
          '-DPARAVIEW_BUILD_PLUGIN_MantaView:BOOL=OFF',
          '-DPARAVIEW_BUILD_QT_GUI:BOOL=ON',
          '-DPARAVIEW_ENABLE_FFMPEG:BOOL=OFF',
          '-DPARAVIEW_ENABLE_PYTHON:BOOL=ON',
          '-DPARAVIEW_USE_MPI:BOOL=ON',
          '-DPARAVIEW_USE_VISITBRIDGE:BOOL=ON',
          '-DVTK_USE_SYSTEM_HDF5:BOOL=ON',
          '-DVTK_USE_SYSTEM_NETCDF:BOOL=ON',
          #Disable the SciberQuestPlugin support for cuda. If we are building on
          #a machine with cuda installed, but needs to manually set the proper
          #backend compiler (aka every linux and mac machine) this fails
          '-DSQTK_CUDA:BOOL=OFF',
          #CMB needs geovis enabled to provide the kml and gdal readers
          '-DModule_vtkGeovisCore:BOOL=ON',
          '-DModule_vtkIOGDAL:BOOL=ON',
          '-DModule_vtkViewsInfovis:BOOL=ON',
          #'-DGDAL_DIR:PATH=<INSTALL_DIR>',
          #CMB needs to specify external plugins so that we can let paraview properly
          #install the plugins. So we sneakily force a variable that is an
          #implementation detail of paraview branding
          '-DBPC_OPTIONAL_PLUGINS:INTERNAL={{optional_plugins}}'
          ]

